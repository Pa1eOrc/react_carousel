{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","useState","translateX","setTranslateX","lastThre","length","isPrevDisabled","isNextDisabled","prevButtonClass","cn","disabled","nextButtonClass","className","style","width","map","img","i","imgAlt","toString","transform","transition","src","alt","type","onClick","prevTranslateX","newTranslateX","Math","min","max","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gRAsGeA,EA1FmB,SAAC,GAM5B,IALLC,EAKI,EALJA,OAKI,IAJJC,iBAII,MAJQ,IAIR,MAHJC,iBAGI,MAHQ,EAGR,MAFJC,YAEI,MAFG,EAEH,EADJC,EACI,EADJA,kBAEA,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EADaR,EAAOS,OAASR,EACLA,EAAYE,EAoBpCO,EAAgC,IAAfJ,EACjBK,EAAiBL,KAAgBE,EAEjCI,EAAkBC,IAAG,SAAU,CACnCC,SAAUJ,IAGNK,EAAkBF,IAAG,SAAU,CACnCC,SAAUH,IAGZ,OACE,qBAAKK,UAAU,WAAf,SACE,sBACEA,UAAU,sBACVC,MAAO,CAAEC,MAAM,GAAD,OAAKjB,EAAYC,EAAjB,OAFhB,UAIE,oBAAIc,UAAU,iBAAd,SACGhB,EAAOmB,KAAI,SAACC,EAAKC,GAChB,IAAMC,GAAUD,EAAI,GAAGE,WAEvB,OACE,oBAEEP,UAAU,iBACVC,MAAO,CACLO,UAAU,cAAD,OAAgBlB,EAAhB,OACTmB,WAAW,aAAD,OAAerB,EAAf,OALd,SAQE,qBACEsB,IAAKN,EACLO,IAAKL,EACLL,MAAO,CAAEC,MAAM,GAAD,OAAKjB,EAAL,UAVXqB,QAgBb,sBAAKN,UAAU,6BAAf,UACE,wBACEY,KAAK,SACLZ,UAAWJ,EACXiB,QAnDQ,WAChBtB,GAAc,SAACuB,GACb,IAAMC,EAAgBD,EAAiB7B,EAAYE,EAEnD,OAAO6B,KAAKC,IAAI,EAAGF,OA4Cf,SA3DU,MAkEV,wBACEH,KAAK,SACL,UAAQ,OACRZ,UAAWD,EACXc,QAnEQ,WAChBtB,GAAc,SAACuB,GACb,IAAMC,EAAgBD,EAAiB7B,EAAYE,EAEnD,OAAO6B,KAAKE,KAAK1B,EAAUuB,OA2DvB,SAjEU,eCVdI,E,4MACJC,MAAQ,CACNpC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWqC,KAAKD,MAAhBpC,OAER,OACE,sBAAKgB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmChB,EAAOS,OAA1C,aAEA,cAAC,EAAD,CACET,OAAQA,EACRC,UAnCQ,IAoCRC,UAnCQ,EAoCRC,KAnCG,EAoCHC,kBAnCgB,a,GAMRkC,IAAMC,WAoCTJ,IC9CfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63bafa34.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration,\n}) => {\n  const [translateX, setTranslateX] = useState(0);\n  const totalWidth = images.length * itemWidth;\n  const lastThre = totalWidth - itemWidth * step;\n  const arrowPrev = '<';\n  const arrowNext = '>';\n\n  const slideNext = () => {\n    setTranslateX((prevTranslateX) => {\n      const newTranslateX = prevTranslateX - itemWidth * step;\n\n      return Math.max(-lastThre, newTranslateX);\n    });\n  };\n\n  const slideBack = () => {\n    setTranslateX((prevTranslateX) => {\n      const newTranslateX = prevTranslateX + itemWidth * step;\n\n      return Math.min(0, newTranslateX);\n    });\n  };\n\n  const isPrevDisabled = translateX === 0;\n  const isNextDisabled = translateX === -lastThre;\n\n  const prevButtonClass = cn('button', {\n    disabled: isPrevDisabled,\n  });\n\n  const nextButtonClass = cn('button', {\n    disabled: isNextDisabled,\n  });\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, i) => {\n            const imgAlt = (i + 1).toString();\n\n            return (\n              <li\n                key={imgAlt}\n                className=\"Carousel__item\"\n                style={{\n                  transform: `translateX(${translateX}px)`,\n                  transition: `transform ${animationDuration}ms`,\n                }}\n              >\n                <img\n                  src={img}\n                  alt={imgAlt}\n                  style={{ width: `${itemWidth}px` }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"Carousel__button-container\">\n          <button\n            type=\"button\"\n            className={prevButtonClass}\n            onClick={slideBack}\n          >\n            {arrowPrev}\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className={nextButtonClass}\n            onClick={slideNext}\n          >\n            {arrowNext}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst itemWidth = 130;\nconst frameSize = 3;\nconst step = 3;\nconst animationDuration = 1000;\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}