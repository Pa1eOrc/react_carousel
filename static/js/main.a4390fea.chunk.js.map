{"version":3,"sources":["components/Menu/Menu.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Menu","itemWidth","setItemWidth","frameSize","setFrameSize","step","setStep","animationDuration","setAnimationDuration","useState","isWidth","setIsWidth","isFremSize","setIsFremSize","isStep","setIsStep","isAnimation","setIsAnimation","useEffect","menuContainer","document","querySelector","style","width","className","type","title","value","onChange","e","target","onClick","Carousel","images","translateX","setTranslateX","totalWidth","length","lastElements","setLastElements","activeImg","setActiveImg","start","count","startActiveImg","Math","abs","newArray","Array","from","_","index","carouselContainer","items","querySelectorAll","forEach","item","element","transform","transition","imgItems","isPrevDisabled","isNextDisabled","prevButtonClass","cn","disabled","nextButtonClass","map","img","i","imgAlt","some","a","src","alt","prevTranslateX","newTranslateX","min","max","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a4390fea.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './Menu.scss';\n\ntype Props = {\n  itemWidth: number,\n  setItemWidth: (itemWidth: number) => void,\n  frameSize: number,\n  setFrameSize: (frameSize: number) => void\n  step: number,\n  setStep: (step: number) => void,\n  animationDuration: number,\n  setAnimationDuration: (animationDuration: number) => void,\n};\n\nexport const Menu: React.FC<Props> = ({\n  itemWidth,\n  setItemWidth,\n  frameSize,\n  setFrameSize,\n  step,\n  setStep,\n  animationDuration,\n  setAnimationDuration,\n}) => {\n  const [isWidth, setIsWidth] = useState(itemWidth);\n  const [isFremSize, setIsFremSize] = useState(frameSize);\n  const [isStep, setIsStep] = useState(step);\n  const [isAnimation, setIsAnimation] = useState(animationDuration);\n\n  useEffect(() => {\n    const menuContainer = document.querySelector(\n      '.menu__list',\n    ) as HTMLElement | null;\n\n    if (menuContainer) {\n      menuContainer.style.width = `${itemWidth * frameSize}px`;\n    }\n  }, [itemWidth, frameSize]);\n\n  return (\n    <fieldset\n      className=\"menu\"\n    >\n      <legend>Menu</legend>\n      <ul className=\"menu__list\">\n        <li className=\"menu__item\">\n          <label className=\"menu__label\">\n            Current item size:\n            {' '}\n            <input\n              className=\"menu__input\"\n              type=\"text\"\n              title=\"Item width\"\n              value={isWidth}\n              onChange={(e) => setIsWidth(+e.target.value)}\n            />\n          </label>\n\n          <button\n            className=\"menu__button\"\n            type=\"button\"\n            onClick={() => setItemWidth(isWidth)}\n          >\n            Set width\n          </button>\n        </li>\n\n        <li className=\"menu__item\">\n          <label className=\"menu__label\">\n            Current frem size:\n            {' '}\n            <input\n              className=\"menu__input\"\n              type=\"text\"\n              title=\"Frem size\"\n              value={isFremSize}\n              onChange={(e) => setIsFremSize(+e.target.value)}\n            />\n          </label>\n          <button\n            className=\"menu__button\"\n            type=\"button\"\n            onClick={() => setFrameSize(isFremSize)}\n          >\n            Set size\n          </button>\n        </li>\n\n        <li className=\"menu__item\">\n          <label className=\"menu__label\">\n            Current step:\n            {' '}\n            <input\n              className=\"menu__input\"\n              type=\"text\"\n              title=\"Step\"\n              value={isStep}\n              onChange={(e) => setIsStep(+e.target.value)}\n            />\n          </label>\n          <button\n            className=\"menu__button\"\n            type=\"button\"\n            onClick={() => setStep(isStep)}\n          >\n            Set step\n          </button>\n        </li>\n\n        <li className=\"menu__item\">\n          <label className=\"menu__label\">\n            Current animation time:\n            {' '}\n            <input\n              className=\"menu__input\"\n              type=\"text\"\n              title=\"Animation time\"\n              value={isAnimation}\n              onChange={(e) => setIsAnimation(+e.target.value)}\n            />\n          </label>\n          <button\n            className=\"menu__button\"\n            type=\"button\"\n            onClick={() => setAnimationDuration(isAnimation)}\n          >\n            Set animation time\n          </button>\n        </li>\n      </ul>\n    </fieldset>\n  );\n};\n","import cn from 'classnames';\n\nimport React, { useEffect, useState } from 'react';\nimport { Menu } from '../Menu/Menu';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst generateNumberArray = (start: number, count: number) => {\n  return Array.from({ length: count }, (_, index) => start + index);\n};\n\nexport const Carousel: React.FC<Props> = ({ images }) => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [translateX, setTranslateX] = useState(0);\n  const totalWidth = images.length * itemWidth;\n  const [lastElements, setLastElements] = useState(0);\n  const [activeImg, setActiveImg] = useState<number[]>([]);\n  const arrowPrev = '<';\n  const arrowNext = '>';\n\n  useEffect(() => {\n    const startActiveImg = (Math.abs(translateX) / itemWidth) + 1;\n    const newArray = generateNumberArray(startActiveImg, frameSize);\n\n    setActiveImg(newArray);\n  }, [translateX, itemWidth, frameSize]);\n\n  useEffect(() => {\n    setLastElements(totalWidth - itemWidth * frameSize);\n  }, [totalWidth, itemWidth, frameSize]);\n\n  useEffect(() => {\n    const carouselContainer = document.querySelector(\n      '.Carousel__container',\n    ) as HTMLElement | null;\n\n    if (carouselContainer) {\n      carouselContainer.style.width = `${itemWidth * frameSize}px`;\n    }\n  }, [itemWidth, frameSize]);\n\n  useEffect(() => {\n    const items = document.querySelectorAll('.Carousel__item');\n\n    if (items) {\n      items.forEach(item => {\n        const element = item as HTMLElement;\n\n        element.style.transform = `translateX(${translateX}px)`;\n        element.style.transition = `transform ${animationDuration}ms`;\n        element.style.width = `${itemWidth}px`;\n      });\n    }\n\n    const imgItems = document.querySelectorAll('img');\n\n    if (imgItems) {\n      imgItems.forEach(item => {\n        const element = item as HTMLElement;\n\n        element.style.width = `${itemWidth}px`;\n      });\n    }\n  }, [animationDuration, translateX, itemWidth]);\n\n  const slideNext = () => {\n    setTranslateX((prevTranslateX) => {\n      const newTranslateX = prevTranslateX - itemWidth * step;\n\n      return Math.max(-lastElements, newTranslateX);\n    });\n  };\n\n  const slideBack = () => {\n    setTranslateX((prevTranslateX) => {\n      const newTranslateX = prevTranslateX + itemWidth * step;\n\n      return Math.min(0, newTranslateX);\n    });\n  };\n\n  const isPrevDisabled = translateX === 0;\n  const isNextDisabled = translateX === -lastElements;\n\n  const prevButtonClass = cn('button', {\n    disabled: isPrevDisabled,\n  });\n\n  const nextButtonClass = cn('button', {\n    disabled: isNextDisabled,\n  });\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <ul className=\"Carousel__list\">\n          {images.map((img, i) => {\n            const imgAlt = (i + 1);\n\n            return (\n              <li\n                key={imgAlt}\n                className={cn(\n                  'Carousel__item',\n                  {\n                    'Carousel__item--active': activeImg.some(\n                      a => a === imgAlt,\n                    ),\n                  },\n                )}\n              >\n                <img\n                  src={img}\n                  alt={`img ${imgAlt}`}\n                />\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"Carousel__button-container\">\n          <button\n            type=\"button\"\n            className={prevButtonClass}\n            onClick={slideBack}\n          >\n            {arrowPrev}\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className={nextButtonClass}\n            onClick={slideNext}\n          >\n            {arrowNext}\n          </button>\n        </div>\n      </div>\n\n      <Menu\n        itemWidth={itemWidth}\n        setItemWidth={setItemWidth}\n        frameSize={frameSize}\n        setFrameSize={setFrameSize}\n        step={step}\n        setStep={setStep}\n        animationDuration={animationDuration}\n        setAnimationDuration={setAnimationDuration}\n      />\n    </div>\n  );\n};\n\nexport { };\n","import React from 'react';\nimport { Carousel } from './components/Carousel/Carousel';\n\nimport './App.scss';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <h1 data-cy=\"title\">\n          {`Carousel with\n          ${images.length}\n          images`}\n        </h1>\n\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}